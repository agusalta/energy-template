---
import Navbar from "./Navbar.astro";
import Footer from "./Footer.astro";
import heroImg from "../components/sections/hero/assets/jardin.webp";

export interface Props {
  title: string;
  description?: string;
  canonicalURL?: string;
  ogImage?: string;
}

const { 
  title, 
  description = "MGarden - Sistema Integral de Espacios Verdes. Especialistas en mantenimiento profesional de parques y jardines para empresas, countries y consorcios.",
  canonicalURL = Astro.url.href,
  ogImage = "https://mgarden.com.ar/mgarden-og.webp"
} = Astro.props;
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-KL1K2PY7D9"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-KL1K2PY7D9');
    </script>
    <!-- Preconnect para recursos externos -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="dns-prefetch" href="https://fonts.googleapis.com" />
    <link rel="dns-prefetch" href="https://fonts.gstatic.com" />
    <link rel="preload" href={heroImg.src} as="image" type="image/webp" fetchpriority="high" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    
    <!-- Meta tags básicos -->
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta name="keywords" content="jardinería, mantenimiento de jardines, espacios verdes, paisajismo, empresas, countries, consorcios" />
    <meta name="author" content="MGarden" />
    <meta name="robots" content="index, follow" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={`MGarden - ${title}`} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:locale" content="es_AR" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={`MGarden - ${title}`} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImage} />
    
    <!-- Título de la página -->
    <title>MGarden - {title}</title>
    
    <!-- Fuentes y estilos -->
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400;500;600;700;800;900&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/style/custom.css" />
  </head>
  <body
    class="overflow-hidden overflow-y-auto bg-base dark:bg-base-dark text-accent dark:text-accent-light min-h-screen"
  >
    <Navbar />
    <slot />
    <Footer />
  </body>
  <script>
    // Función para inicializar el tema
    function initTheme() {
      const theme = localStorage.getItem('theme');
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      
      if (theme === 'dark' || (!theme && prefersDark)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    }

    // Función para cambiar el tema
    function toggleTheme() {
      const isDark = document.documentElement.classList.contains('dark');
      if (isDark) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      }
    }

    // Inicializar el tema al cargar la página
    initTheme();

    // Escuchar cambios en las preferencias del sistema
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        if (e.matches) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      }
    });

    // Manejar el botón de cambio de tema
    const switchTheme = document.querySelector("[data-switch-theme]") as HTMLButtonElement;
    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault();
        toggleTheme();
      });
    }
  </script>
  <script>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]"
    ) as HTMLButtonElement;
    const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
    const overlayNav = document.querySelector(
      "[data-nav-overlay]"
    ) as HTMLDivElement;
    if (toggleMenu) {
      toggleMenu.addEventListener("click", (e) => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
          navbar.style.height = `${navbar.scrollHeight}px`;
        } else {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.setAttribute("data-is-visible", "false");
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
        }
      });

      navbar.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });

      overlayNav.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });
    }
  </script>
</html>
