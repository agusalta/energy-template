---
import Container from "../../shared/Container.astro";
import GradiantText from "../../shared/GradiantText.astro";
import LazyImage from "../../shared/LazyImage.astro";
import Paragraph from "../../shared/Paragraph.astro";
import SubTitle2 from "../../shared/SubTitle2.astro";
import Title2 from "../../shared/Title2.astro";
import Title3 from "../../shared/Title3.astro";
import { innovationsSection } from "./data";

export interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<section id="innovations" class={`${className} opacity-0 transition-all duration-1000 ease-in-out`}>
  <Container
    className="mx-auto flex flex-col items-center justify-center text-center"
  >
    <Title2 className="transform translate-y-4 opacity-0 transition-all duration-700 ease-out">{innovationsSection.title}</Title2>
    <SubTitle2 className="transform translate-y-4 opacity-0 transition-all duration-700 ease-out delay-100">
      {innovationsSection.subheading1_1}<br />
      <GradiantText>{innovationsSection.subheading1_2}</GradiantText>
    </SubTitle2>
  </Container>
  <Container>
    {
      innovationsSection.innovations.map((solution, index: number) => {
        const oddIndex = index % 2 === 0;
        const flexRow = oddIndex ? "midmd:flex-row-reverse" : "midmd:flex-row";
        const bgColor = "";
        const slideDirection = oddIndex ? "translate-x-8" : "-translate-x-8";
        return (
          <div class={`w-100 ${bgColor} pb-32 transform ${slideDirection} opacity-0 transition-all duration-700 ease-out innovation-item`}>
            <div
              class={`flex flex-col gap-10 lg:gap-12 ${flexRow} mx-auto max-w-7xl w-full`}
            >
              <div class="max-w-md mx-auto midmd:max-w-none lg:mx-0 lg:pr-10 xl:pr-2 flex w-11/12 midmd:w-5/12 lg:w-1/2 midmd:h-auto">
                <div class="w-full max-h-[50vh] sm:h-96 midmd:h-full relative">
                  <LazyImage
                    src={solution.visual}
                    alt="banner image"
                    width="500"
                    class="rounded-3xl object-cover h-full"
                  />
                </div>
              </div>
              <div class="max-w-md mx-auto w-11/12 flex-1 flex midmd:w-7/12 lg:w-1/2 flex-col">
                <Title3>{solution.title}</Title3>
                <Paragraph className="mt-3">{solution.description}</Paragraph>
              </div>
            </div>
          </div>
        );
      })
    }
  </Container>
</section>

<script>
  function animateOnScroll() {
    // Animar el encabezado
    const section = document.querySelector('#innovations');
    if (!section) return;

    const headerObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          section.classList.remove('opacity-0');
          section.classList.add('opacity-100');
          
          // Animar título y subtítulo
          const titleElements = section.querySelectorAll('.transform:not(.innovation-item)');
          titleElements.forEach(element => {
            element.classList.remove('opacity-0', 'translate-y-4');
            element.classList.add('opacity-100', 'translate-y-0');
          });
          
          headerObserver.unobserve(section);
        }
      });
    }, {
      threshold: 0.1
    });

    headerObserver.observe(section);

    // Animar cada innovación individualmente
    const innovationItems = document.querySelectorAll('.innovation-item');
    const itemObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.remove('opacity-0', 'translate-x-8', '-translate-x-8');
          entry.target.classList.add('opacity-100', 'translate-x-0');
          itemObserver.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.2,
      rootMargin: '0px 0px -100px 0px'
    });

    innovationItems.forEach(item => {
      itemObserver.observe(item);
    });
  }

  // Ejecutar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', animateOnScroll);
</script>
