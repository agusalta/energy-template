---
import Button from "../../../shared/Button.astro";
import Container from "../../../shared/Container.astro";
import { z } from "zod";

export interface Props {
  className?: string;
}

const { className = "" } = Astro.props;

const formSchema = z.object({
  nombre: z.string().min(2, "El nombre debe tener al menos 2 caracteres"),
  apellido: z.string().min(2, "El apellido debe tener al menos 2 caracteres"),
  email: z.string().email("Ingrese un email v√°lido"),
  telefono: z.string()
    .min(8, "El tel√©fono debe tener al menos 8 caracteres")
    .regex(/^[0-9+\-\s()]*$/, "El tel√©fono solo puede contener n√∫meros, +, -, espacios y par√©ntesis"),
  mensaje: z.string().min(10, "El mensaje debe tener al menos 10 caracteres")
});

const email = "agusalta002@gmail.com";
const formSubmit = `https://formsubmit.co/${email}`;
---

<style>
  @keyframes fadeInUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes inputFocus {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.02);
    }
    100% {
      transform: scale(1);
    }
  }

  .animate-form {
    opacity: 0;
  }

  .form-input {
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .form-input:focus {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-color: var(--color-primary);
    animation: inputFocus 0.3s ease;
  }

  .form-input:hover {
    border-color: var(--color-primary);
  }

  .form-label {
    transition: all 0.3s ease;
  }

  .form-input:focus + .form-label {
    color: var(--color-primary);
  }

  .error-message {
    color: #ef4444;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }

  .input-error {
    border-color: #ef4444 !important;
  }
</style>

<section class={`pt-20 w-full ${className}`}>
  <Container>
    <div class="max-w-6xl mx-auto flex flex-col lg:flex-row gap-16">
      <div class="lg:w-1/3">
        <h2 class="text-3xl font-semibold text-heading-3 mb-4 dark:text-cta">CONTACT√ÅNOS</h2>
        <p class="text-heading-3">
          Escuchamos lo que necesit√°s y trabajamos con responsabilidad.
        </p>
        <div class="mt-10">
          <h3 class="text-2xl font-semibold text-heading-3 mb-3 text-primary dark:text-cta">BONUS MGARDEN</h3>
          <ul class="space-y-3">
            <li class="flex items-center text-heading-3">
              <span class="font-bold bg-box-bg rounded-full w-8 h-8 flex justify-center items-center text-primary mr-3">
                &checkmark;
              </span>
              <span>Servicio de fumigaci√≥n inicial gratuito</span>
            </li>
            <li class="flex items-center text-heading-3">
              <span class="font-bold bg-box-bg rounded-full w-8 h-8 flex justify-center items-center text-primary mr-3">
                &checkmark;
              </span>
              <span>Asesoramiento en cuidado de espacios verdes sin cargo</span>
            </li>
          </ul>
        </div>
      </div>
      <div class="lg:w-2/3">
        <form action={formSubmit} method="POST" class="space-y-6 animate-form" id="contactForm">
          <input type="hidden" name="_subject" value="üì¨ Nuevo contacto desde MGarden">
          <input type="hidden" name="_template" value="box">
          <input type="hidden" name="_next" value={"https://mbgarden.netlify.app/gracias"}>
          <input type="hidden" name="_captcha" value="false">
          <input type="hidden" name="_blacklist" value="spammy pattern, banned term, phrase">
        
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="nombre" class="block text-sm font-medium text-heading-3 mb-1 form-label">Nombre*</label>
              <input 
                type="text" 
                id="nombre" 
                name="nombre" 
                required 
                class="w-full px-3 py-2 border border-box-border rounded-md shadow-sm bg-box-bg text-gray-900 focus:ring-primary focus:border-primary form-input"
              />
              <div class="error-message" id="nombre-error"></div>
            </div>
            <div>
              <label for="apellido" class="block text-sm font-medium text-heading-3 mb-1 form-label">Apellido*</label>
              <input 
                type="text" 
                id="apellido" 
                name="apellido" 
                required 
                class="w-full px-3 py-2 border border-box-border rounded-md shadow-sm bg-box-bg text-gray-900 focus:ring-primary focus:border-primary form-input"
              />
              <div class="error-message" id="apellido-error"></div>
            </div>
          </div>
        
          <div>
            <label for="email" class="block text-sm font-medium text-heading-3 mb-1 form-label">Email*</label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required 
              placeholder="johndoe@gmail.com"
              class="w-full px-3 py-2 border border-box-border rounded-md shadow-sm bg-box-bg text-gray-900 focus:ring-primary focus:border-primary form-input"
            />
            <div class="error-message" id="email-error"></div>
          </div>
        
          <div>
            <label for="telefono" class="block text-sm font-medium text-heading-3 mb-1 form-label">Tel√©fono*</label>
            <input 
              type="tel" 
              id="telefono" 
              name="telefono" 
              required 
              pattern="[0-9+\-\s()]*"
              title="Ingrese un n√∫mero de tel√©fono v√°lido (solo n√∫meros, +, -, espacios y par√©ntesis)"
              class="w-full px-3 py-2 border border-box-border rounded-md shadow-sm bg-box-bg text-gray-900 focus:ring-primary focus:border-primary form-input"
            />
            <div class="error-message" id="telefono-error"></div>
          </div>
        
          <div>
            <label for="mensaje" class="block text-sm font-medium text-heading-3 mb-1 form-label">¬øC√≥mo podemos ayudarte?</label>
            <textarea 
              id="mensaje" 
              name="mensaje" 
              rows="4" 
              class="w-full px-3 py-2 border border-box-border rounded-md shadow-sm bg-box-bg text-gray-900 focus:ring-primary focus:border-primary resize-none form-input"
            ></textarea>
            <div class="error-message" id="mensaje-error"></div>
          </div>
        
          <div>
            <button type="submit" class="min-w-max text-white bg-cta py-2 px-4 rounded-md">
              <span class="relative z-[5]">Enviar</span>
            </button>
          </div>
        </form>
        
      </div>
    </div>
  </Container>
</section>

<script>
  import { z } from 'zod';

  const formSchema = z.object({
    nombre: z.string().min(2, "El nombre debe tener al menos 2 caracteres"),
    apellido: z.string().min(2, "El apellido debe tener al menos 2 caracteres"),
    email: z.string().email("Ingrese un email v√°lido"),
    telefono: z.string()
      .min(8, "El tel√©fono debe tener al menos 8 caracteres")
      .regex(/^[0-9+\-\s()]*$/, "El tel√©fono solo puede contener n√∫meros, +, -, espacios y par√©ntesis"),
    mensaje: z.string().min(10, "El mensaje debe tener al menos 10 caracteres")
  });

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.animate-form');
    if (!form) return;

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          (form as HTMLElement).style.animation = 'fadeInUp 0.8s ease-out forwards';
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1
    });

    observer.observe(form);

    // Form validation
    const contactForm = document.getElementById('contactForm') as HTMLFormElement;
    
    const clearErrors = () => {
      document.querySelectorAll('.error-message').forEach(el => {
        (el as HTMLElement).textContent = '';
      });
      document.querySelectorAll('.input-error').forEach(el => {
        el.classList.remove('input-error');
      });
    };

    const showError = (field: string, message: string) => {
      const errorElement = document.getElementById(`${field}-error`);
      const inputElement = document.getElementById(field);
      
      if (errorElement) {
        errorElement.textContent = message;
      }
      if (inputElement) {
        inputElement.classList.add('input-error');
      }
    };

    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      clearErrors();

      const formData = {
        nombre: (document.getElementById('nombre') as HTMLInputElement).value,
        apellido: (document.getElementById('apellido') as HTMLInputElement).value,
        email: (document.getElementById('email') as HTMLInputElement).value,
        telefono: (document.getElementById('telefono') as HTMLInputElement).value,
        mensaje: (document.getElementById('mensaje') as HTMLTextAreaElement).value
      };

      try {
        const validatedData = formSchema.parse(formData);
        // Si la validaci√≥n es exitosa, enviamos el formulario
        contactForm.submit();
      } catch (error) {
        if (error instanceof z.ZodError) {
          error.errors.forEach((err) => {
            const field = err.path[0] as string;
            showError(field, err.message);
          });
        }
      }
    });
  });
</script>
